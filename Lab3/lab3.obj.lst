					; SYSC2001 - Lab 3
					; Program to complete 8-bit unsigned shift & add multiplication
					; AH = A; CH = Q; BH = M; Final 16-bit result in AX
					
					.ORG 0000h
					Data:
0000	0F			Y:	.DB	15		; Multiplicand
0001	49			X: 	.DB	73		; Multiplier
						
					.ORG 0010h
					Init:
0010	B80000			mov AX, 0h 				; Initialize AX to zero. AH serves as accumulator and AX will hold product
0013	8A2E0100			mov CH, [X]				; Initialize CH (Q) = X
0017	8A3E0000			mov BH, [Y]				; Init BH (M) = Y
001B	B208			mov DL, 8h				; Init DL as a loop counter with number of iterations required
						
					mainLoop:
001D	C0CD01			ROR CH, 1h				; Shift out the lsb of the multiplier (Q[0]) into the carry flag
0020	7302			JNC shift				; Check the carry flag: If Q[0] was not set, skip over Add and just shift
					AddM:
0022	00FC			ADD AH, BH				; A = A + M
					shift:
0024	C0DC01			RCR AH, 1h				; Shift AH and AL (16-bit result will be here eventually). Also need to shift CF into MSb of AH...
0027	C0D801			RCR AL, 1h				; Decrement loop counter
002A	FECA			DEC DL				; If loop counter reaches zero, quit, else, loop back
002C	80FA00			CMP DL, 0h
002F	7FEC			JG mainLoop
						
					quit:
0031	F4			HLT
